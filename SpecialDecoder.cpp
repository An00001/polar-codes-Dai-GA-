F_function_vectorized(LLR[0][10].data(), LLR[0][9].data(), 512);
F_function_vectorized(LLR[0][9].data(), LLR[0][8].data(), 256);
F_function_vectorized(LLR[0][8].data(), LLR[0][7].data(), 128);
F_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), 64);
Repetition_vectorized(LLR[0][6].data(), BitPtr+0, 64);
G_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), BitPtr+0, 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
G_function_0R_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
G_function_0R_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
G_function_0R(LLR[0][3].data(), LLR[0][2].data(), 4);
P_01(LLR[0][2].data(), BitPtr+92, 2);
Combine_0RSimple(BitPtr+88, 4);
Combine_0RSimple(BitPtr+80, 8);
Combine_0RSimple(BitPtr+64, 16);
G_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), BitPtr+64, 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
G_function_0R_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
RepSPC_8(LLR[0][3].data(), BitPtr+104);
Combine_0RSimple(BitPtr+96, 8);
G_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), BitPtr+96, 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
RepSPC_8(LLR[0][3].data(), BitPtr+112);
P_RSPC(LLR[0][4].data(), BitPtr+112, 8);
CombineSimple_vectorized(BitPtr+96, 16);
CombineSimple_vectorized(BitPtr+64, 32);
CombineSimple_vectorized(BitPtr+0, 64);
G_function_vectorized(LLR[0][8].data(), LLR[0][7].data(), BitPtr+0, 128);
F_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
G_function_0R_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
Repetition_vectorized(LLR[0][3].data(), BitPtr+144, 8);
G_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), BitPtr+144, 8);
RepSPC_8(LLR[0][3].data(), BitPtr+152);
CombineSimple_vectorized(BitPtr+144, 8);
Combine_0RSimple(BitPtr+128, 16);
G_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), BitPtr+128, 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
Repetition_vectorized(LLR[0][3].data(), BitPtr+160, 8);
G_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), BitPtr+160, 8);
RepSPC_8(LLR[0][3].data(), BitPtr+168);
CombineSimple_vectorized(BitPtr+160, 8);
G_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), BitPtr+160, 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
F_function(LLR[0][3].data(), LLR[0][2].data(), 4);
Repetition(LLR[0][2].data(), BitPtr+176, 4);
P_R1(LLR[0][3].data(), BitPtr+176, 4);
P_R1_vectorized(LLR[0][4].data(), BitPtr+176, 8);
CombineSimple_vectorized(BitPtr+160, 16);
CombineSimple_vectorized(BitPtr+128, 32);
G_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), BitPtr+128, 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
Repetition_vectorized(LLR[0][3].data(), BitPtr+192, 8);
G_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), BitPtr+192, 8);
F_function(LLR[0][3].data(), LLR[0][2].data(), 4);
P_01(LLR[0][2].data(), BitPtr+200, 2);
P_R1(LLR[0][3].data(), BitPtr+200, 4);
CombineSimple_vectorized(BitPtr+192, 8);
P_RSPC(LLR[0][5].data(), BitPtr+192, 16);
P_RSPC(LLR[0][6].data(), BitPtr+192, 32);
CombineSimple_vectorized(BitPtr+128, 64);
CombineSimple_vectorized(BitPtr+0, 128);
G_function_vectorized(LLR[0][9].data(), LLR[0][8].data(), BitPtr+0, 256);
F_function_vectorized(LLR[0][8].data(), LLR[0][7].data(), 128);
F_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
Repetition_vectorized(LLR[0][4].data(), BitPtr+256, 16);
G_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), BitPtr+256, 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
Repetition_vectorized(LLR[0][3].data(), BitPtr+272, 8);
G_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), BitPtr+272, 8);
F_function(LLR[0][3].data(), LLR[0][2].data(), 4);
Repetition(LLR[0][2].data(), BitPtr+280, 4);
P_R1(LLR[0][3].data(), BitPtr+280, 4);
CombineSimple_vectorized(BitPtr+272, 8);
CombineSimple_vectorized(BitPtr+256, 16);
G_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), BitPtr+256, 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
P_0SPC(LLR[0][3].data(), BitPtr+288, 4);
P_RSPC(LLR[0][4].data(), BitPtr+288, 8);
P_RSPC(LLR[0][5].data(), BitPtr+288, 16);
CombineSimple_vectorized(BitPtr+256, 32);
G_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), BitPtr+256, 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
RepSPC_8(LLR[0][3].data(), BitPtr+320);
P_RSPC(LLR[0][4].data(), BitPtr+320, 8);
P_RSPC(LLR[0][5].data(), BitPtr+320, 16);
P_RSPC(LLR[0][6].data(), BitPtr+320, 32);
CombineSimple_vectorized(BitPtr+256, 64);
G_function_vectorized(LLR[0][8].data(), LLR[0][7].data(), BitPtr+256, 128);
F_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
RepSPC_8(LLR[0][3].data(), BitPtr+384);
P_RSPC(LLR[0][4].data(), BitPtr+384, 8);
P_RSPC(LLR[0][5].data(), BitPtr+384, 16);
P_RSPC(LLR[0][6].data(), BitPtr+384, 32);
P_RSPC(LLR[0][7].data(), BitPtr+384, 64);
CombineSimple_vectorized(BitPtr+256, 128);
CombineSimple_vectorized(BitPtr+0, 256);
G_function_vectorized(LLR[0][10].data(), LLR[0][9].data(), BitPtr+0, 512);
F_function_vectorized(LLR[0][9].data(), LLR[0][8].data(), 256);
F_function_vectorized(LLR[0][8].data(), LLR[0][7].data(), 128);
F_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
G_function_0R_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
P_0SPC(LLR[0][3].data(), BitPtr+520, 4);
Combine_0RSimple(BitPtr+512, 8);
G_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), BitPtr+512, 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
RepSPC_8(LLR[0][3].data(), BitPtr+528);
P_RSPC(LLR[0][4].data(), BitPtr+528, 8);
CombineSimple_vectorized(BitPtr+512, 16);
G_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), BitPtr+512, 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
RepSPC_8(LLR[0][3].data(), BitPtr+544);
P_RSPC(LLR[0][4].data(), BitPtr+544, 8);
P_RSPC(LLR[0][5].data(), BitPtr+544, 16);
CombineSimple_vectorized(BitPtr+512, 32);
G_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), BitPtr+512, 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
RepSPC_8(LLR[0][3].data(), BitPtr+576);
P_RSPC(LLR[0][4].data(), BitPtr+576, 8);
P_RSPC(LLR[0][5].data(), BitPtr+576, 16);
P_RSPC(LLR[0][6].data(), BitPtr+576, 32);
CombineSimple_vectorized(BitPtr+512, 64);
G_function_vectorized(LLR[0][8].data(), LLR[0][7].data(), BitPtr+512, 128);
F_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
RepSPC_8(LLR[0][3].data(), BitPtr+640);
P_RSPC(LLR[0][4].data(), BitPtr+640, 8);
P_R1_vectorized(LLR[0][5].data(), BitPtr+640, 16);
P_R1_vectorized(LLR[0][6].data(), BitPtr+640, 32);
P_R1_vectorized(LLR[0][7].data(), BitPtr+640, 64);
CombineSimple_vectorized(BitPtr+512, 128);
G_function_vectorized(LLR[0][9].data(), LLR[0][8].data(), BitPtr+512, 256);
F_function_vectorized(LLR[0][8].data(), LLR[0][7].data(), 128);
F_function_vectorized(LLR[0][7].data(), LLR[0][6].data(), 64);
F_function_vectorized(LLR[0][6].data(), LLR[0][5].data(), 32);
F_function_vectorized(LLR[0][5].data(), LLR[0][4].data(), 16);
F_function_vectorized(LLR[0][4].data(), LLR[0][3].data(), 8);
F_function(LLR[0][3].data(), LLR[0][2].data(), 4);
Repetition(LLR[0][2].data(), BitPtr+768, 4);
P_R1(LLR[0][3].data(), BitPtr+768, 4);
P_R1_vectorized(LLR[0][4].data(), BitPtr+768, 8);
P_R1_vectorized(LLR[0][5].data(), BitPtr+768, 16);
P_R1_vectorized(LLR[0][6].data(), BitPtr+768, 32);
P_R1_vectorized(LLR[0][7].data(), BitPtr+768, 64);
P_R1_vectorized(LLR[0][8].data(), BitPtr+768, 128);
CombineSimple_vectorized(BitPtr+512, 256);
CombineSimple_vectorized(BitPtr+0, 512);
